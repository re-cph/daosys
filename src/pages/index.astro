---
import Layout from "../layouts/Layout.astro";
import shapesAllTogether from "../images/hero_0.png";
import hero1 from "../images/hero_1.png";
import hero2 from "../images/hero_2.png";
import hero3 from "../images/hero_3.png";
import bandsVideo from "../data/bandsVideo.mjs";
import BandVideo from "../components/BandVideo.astro";
import bandsTriple from "../data/bandsTriple.mjs";
import BandTriple from "../components/BandTriple.astro";
---

<Layout>
  <!-- Hero -->
  <div id="home" class="bg-blue-lighter">
    <div
      class="container mx-auto text-white md:grid grid-cols-12 gap-x-4 items-center h-screen"
    >
      <div class="col-span-5 px-4 pt-28">
        <h1 class="text-5xl md:text-6xl">Risk less, venture more</h1>
        <p class="text-xl md:text-2xl mt-6">
          World&rsquor;s most effective decentralized autonomous organization
        </p>
        <div
          class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-8 mt-8"
        >
          <div class="flex">
            <a
              href="https://discord.gg/TetN8vpw9h"
              class="rounded-full p-4 px-6 cursor-pointer bg-blue-dark text-white text-sm hover:bg-blue-light hover:text-blue-dark"
              target="_blank"
              >
              Join our discord
            </a>
          </div>

          <div class="flex">
            <a
              href="/downloads/daosys-litepaper.html"
              target="_blank"
              class="p-4 px-6 border border-blue-dark hover:bg-blue-dark rounded-full no-underline text-sm"
            >
              Download Litepaper
            </a>
          </div>
        </div>
      </div>
      <div class="col-span-7 md:relative md:h-full z-20">
        {[shapesAllTogether, hero1, hero2, hero3].map((hero, index) => (
          <img
            src={hero}
            class={`${index === 0 ? 'md:hidden' : 'hidden md:block'} md:transition-transform md:duration-75 md:ease-in md:absolute md:-bottom-28 md:w-full`}
            id={`heroGraphic${index}`}
          />
        ))}
      </div>
    </div>
  </div>
  <!-- Text section -->
  <!-- <div
    id="about"
    class="band container mx-auto py-40 text-splash"
    data-color="text-blue"
  > -->
  <div id="about" class="container mx-auto px-8 md:px4 py-[6.25rem] md:py-40 md:text-splash">
    <p>
      DAOs are organizations that run completely on the blockchain and are
      governed by token holders. They are fully autonomous, transparent and
      decentralized.
    </p>
    <p class="mt-12">
      DAOSYS harnesses the power of DAOs through our Bitcoin-level security and
      a self-sovereign treasury. Unlike other decentralized organizations,
      DAOSYS is free of treasury governance issues. Welcome to 4-D finance.
      Risk-free deployment of capital.
    </p>
  </div>
  <div id="services">
    {bandsVideo.map((band, index) => <BandVideo item={band} index={index} />)}
  </div>

  {bandsTriple.map((band) => <BandTriple band={band} />)}
</Layout>

<script hoist type="module">
  // PARALLAX
  function parallax() {
    var scrolled = document.documentElement["scrollTop"];
    document.getElementById("heroGraphic0").style.transform =
      "translateY(" + -(scrolled * 0.01) + "rem)";
    document.getElementById("heroGraphic1").style.transform =
      "translateY(" + -(scrolled * 0.08) + "rem)";
    document.getElementById("heroGraphic2").style.transform =
      "translateY(" + -(scrolled * 0.04) + "rem)";
    document.getElementById("heroGraphic3").style.transform =
      "translateY(" + -(scrolled * 0.01) + "rem)";
  }
  window.onscroll = function () {
    parallax();
  };

  // Load animation vids while scrolling
  function handleIntersection(entries) {
    entries.map((entry) => {
      if (entry.isIntersecting) {
        // START VIDEO
        if (entry.target.tagName === "VIDEO") {
          entry.target.play();
        }
      }
    });
  }

  // Load static animation while scrolling
  function handleIntersection2(entries) {
    entries.map((entry) => {
      if (entry.isIntersecting) {
        if (entry.target.classList.contains('static-graphic')) {
          entry.target.classList.remove('opacity-0');
          entry.target.classList.add('opacity-100');

          entry.target.classList.remove('top-16');
          entry.target.classList.add('top-0');
        }
      } else {
        if (entry.target.classList.contains('static-graphic')) {
          entry.target.classList.remove('opacity-100');
          entry.target.classList.add('opacity-0');
          
          entry.target.classList.remove('top-0');
          entry.target.classList.add('top-16');
        }
      }
    });
  }

  const target = document.querySelectorAll(".motion-graphic");
  const observer = new IntersectionObserver(handleIntersection, {
    threshold: 0.85,
  });

  const target2 = document.querySelectorAll(".static-graphic");
  const observer2 = new IntersectionObserver(handleIntersection2, {
    threshold: 0.33,
  });

  target.forEach((element) => observer.observe(element));
  target2.forEach((element) => observer2.observe(element));
</script>
