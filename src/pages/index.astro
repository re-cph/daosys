---
import Layout from "../layouts/Layout.astro";
import shapesAllTogether from "../images/alltogether.png";
import bandsVideo from "../data/bandsVideo.mjs";
import BandVideo from "../components/BandVideo.astro";
import bandsTriple from "../data/bandsTriple.mjs";
import BandTriple from "../components/BandTriple.astro";
---

<Layout>
  <!-- Hero -->
  <!-- <div id="home" class="band bg-blue-lighter" data-color="text-white"> -->
  <div id="home" class="band bg-blue-lighter">
    <div
      class="container mx-auto text-white md:grid grid-cols-12 gap-x-4 items-center h-screen"
    >
      <div class="col-span-5 pt-28">
        <h1 class="text-5xl md:text-6xl">Risk less, venture more</h1>
        <p class="text-xl md:text-2xl mt-6">
          World&rsquor;s most effective decentralized autonomous organization
        </p>
        <div
          class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-8 mt-8"
        >
          <div class="flex">
            <a
              href="https://discord.gg/TetN8vpw9h"
              class="p-4 px-6 border border-blue-dark bg-blue-dark rounded-full no-underline text-sm"
              target="_blank"
            >
              Join our discord
            </a>
          </div>

          <div class="flex">
            <a
              href="/downloads/daosys-litepaper.html"
              target="_blank"
              class="p-4 px-6 border border-blue-dark hover:bg-blue-dark rounded-full no-underline text-sm"
            >
              Download Litepaper
            </a>
          </div>
        </div>
      </div>
      <div class="col-span-7 md:relative md:h-full z-10">
        <img
          src={shapesAllTogether}
          class="md:absolute md:-bottom-28 md:w-full"
          id="heroGraphic"
        />
      </div>
    </div>
  </div>
  <!-- Text section -->
  <!-- <div
    id="about"
    class="band container mx-auto py-40 text-splash"
    data-color="text-blue"
  > -->
  <div id="about" class="band container mx-auto py-40 text-splash">
    <p>
      DAOs are organizations that run completely on the blockchain and are
      governed by token holders. They are fully autonomous, transparent and
      decentralized.
    </p>
    <p class="mt-12">
      DAOSYS harnesses the power of DAOs through our Bitcoin-level security and
      a self-sovereign treasury. Unlike other decentralized organizations,
      DAOSYS is free of treasury governance issues. Welcome to 4-D finance.
      Risk-free deployment of capital.
    </p>
  </div>
  <div id="services">
    {bandsVideo.map((band, index) => <BandVideo item={band} index={index} />)}
  </div>

  {bandsTriple.map((band) => <BandTriple band={band} />)}
</Layout>

<script hoist type="module">
  // PARALLAX
  function parallax() {
    var scrolled = document.documentElement["scrollTop"];
    document.getElementById("heroGraphic").style.transform =
      "translateY(" + -(scrolled * 0.01) + "rem)";
  }
  window.onscroll = function () {
    parallax();
  };

  // Load animation vids while scrolling
  const menu = document.getElementById("menu");
  function handleIntersection(entries) {
    entries.map((entry) => {
      if (entry.isIntersecting) {
        // START VIDEO
        if (entry.target.tagName === "VIDEO") {
          entry.target.play();
        }
        // observer.unobserve(entry.target);

        // SET MENU COLOR
        // menu.classList.replace(
        //   menu.dataset.previousColor,
        //   entry.target.dataset.color
        // );
        // menu.dataset.previousColor = entry.target.dataset.color;
      }
    });
  }

  // function handleIntersection2(entries) {
  //   entries.map((entry) => {
  //     // console.log("entry.intersectionRatio", entry.intersectionRatio);
  //     if (entry.isIntersecting) {
  //       menu.classList.replace(
  //         menu.dataset.previousColor,
  //         entry.target.dataset.color
  //       );
  //       menu.dataset.previousColor = entry.target.dataset.color;
  //     }
  //   });
  // }

  const target = document.querySelectorAll(".band");
  const observer = new IntersectionObserver(handleIntersection, {
    threshold: 0.85,
  });
  // const observer2 = new IntersectionObserver(handleIntersection2, {
  //   threshold: 1,
  // });
  target.forEach((element) => observer.observe(element));
  // target.forEach((element) => observer2.observe(element));
</script>
